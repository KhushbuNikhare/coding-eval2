{"ast":null,"code":"import axios from \"axios\";\nimport { SORT_DATA, GET_CLICKED_PRODUCT_REQ, GET_CLICKED_PRODUCT_SUCCESS, GET_PRODUCT_FAILURE, GET_PRODUCT_REQ, GET_PRODUCT_SUCCESS } from \"./actionTypes\";\nimport { useDispatch } from \"react-redux\"; // action for get products request\n\nexport const getProductsReq = () => ({\n  type: GET_PRODUCT_REQ\n}); // action for get products success\n\nexport const getProductsSuccess = payload => ({\n  type: GET_PRODUCT_SUCCESS,\n  payload\n}); // action for get products failure\n\nexport const getProductsFailure = () => ({\n  type: GET_PRODUCT_FAILURE\n}); // thunk call to fetch products  list\n\nexport const getproductsData = () => {\n  return dispatch => {\n    dispatch(getProductsReq());\n    axios.get(\"https://movie-fake-server.herokuapp.com/products\").then(res => {\n      dispatch(getProductsSuccess(res.data));\n    }).catch(() => {\n      dispatch(getProductsFailure());\n    });\n  };\n}; // action object for sort  feature\n\nexport const sortProducts = payload => ({\n  type: SORT_DATA,\n  payload\n});\nexport const getClickedProductRequest = () => ({\n  type: GET_CLICKED_PRODUCT_REQ\n});\nexport const getClickedProductSuccess = payload => {\n  // console.log(payload.data);\n  return {\n    type: GET_CLICKED_PRODUCT_SUCCESS,\n    payload\n  };\n};\nexport const getClickedProductFailure = () => ({\n  type: GET_PRODUCT_FAILURE\n});\nexport const getClickedProductData = id => {\n  return dispatch => {\n    dispatch(getClickedProductRequest());\n    axios.get(`https://movie-fake-server.herokuapp.com/products/${id}`).then(res => {\n      dispatch(getClickedProductSuccess(res.data));\n    }).catch(err => {\n      console.log(err);\n      dispatch(getClickedProductFailure());\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Dell/Desktop/Source/src/Redux/actions.js"],"names":["axios","SORT_DATA","GET_CLICKED_PRODUCT_REQ","GET_CLICKED_PRODUCT_SUCCESS","GET_PRODUCT_FAILURE","GET_PRODUCT_REQ","GET_PRODUCT_SUCCESS","useDispatch","getProductsReq","type","getProductsSuccess","payload","getProductsFailure","getproductsData","dispatch","get","then","res","data","catch","sortProducts","getClickedProductRequest","getClickedProductSuccess","getClickedProductFailure","getClickedProductData","id","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,uBAFF,EAGEC,2BAHF,EAIEC,mBAJF,EAKEC,eALF,EAMEC,mBANF,QAOO,eAPP;AAQA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAG,OAAO;AACnCC,EAAAA,IAAI,EAAEJ;AAD6B,CAAP,CAAvB,C,CAIP;;AACA,OAAO,MAAMK,kBAAkB,GAAIC,OAAD,KAAc;AAC9CF,EAAAA,IAAI,EAAEH,mBADwC;AAE9CK,EAAAA;AAF8C,CAAd,CAA3B,C,CAKP;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,OAAO;AACvCH,EAAAA,IAAI,EAAEL;AADiC,CAAP,CAA3B,C,CAIP;;AACA,OAAO,MAAMS,eAAe,GAAG,MAAM;AACnC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACN,cAAc,EAAf,CAAR;AACAR,IAAAA,KAAK,CACFe,GADH,CACO,kDADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbH,MAAAA,QAAQ,CAACJ,kBAAkB,CAACO,GAAG,CAACC,IAAL,CAAnB,CAAR;AACD,KAJH,EAKGC,KALH,CAKS,MAAM;AACXL,MAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACD,KAPH;AAQD,GAVD;AAWD,CAZM,C,CAcP;;AAEA,OAAO,MAAMQ,YAAY,GAAIT,OAAD,KAAc;AACxCF,EAAAA,IAAI,EAAER,SADkC;AAExCU,EAAAA;AAFwC,CAAd,CAArB;AAKP,OAAO,MAAMU,wBAAwB,GAAG,OAAO;AAC7CZ,EAAAA,IAAI,EAAEP;AADuC,CAAP,CAAjC;AAGP,OAAO,MAAMoB,wBAAwB,GAAIX,OAAD,IAAa;AACnD;AACA,SAAO;AACLF,IAAAA,IAAI,EAAEN,2BADD;AAELQ,IAAAA;AAFK,GAAP;AAID,CANM;AAOP,OAAO,MAAMY,wBAAwB,GAAG,OAAO;AAC7Cd,EAAAA,IAAI,EAAEL;AADuC,CAAP,CAAjC;AAIP,OAAO,MAAMoB,qBAAqB,GAAIC,EAAD,IAAQ;AAC3C,SAAQX,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACO,wBAAwB,EAAzB,CAAR;AACArB,IAAAA,KAAK,CACFe,GADH,CACQ,oDAAmDU,EAAG,EAD9D,EAEGT,IAFH,CAESC,GAAD,IAAS;AACbH,MAAAA,QAAQ,CAACQ,wBAAwB,CAACL,GAAG,CAACC,IAAL,CAAzB,CAAR;AACD,KAJH,EAKGC,KALH,CAKUO,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAZ,MAAAA,QAAQ,CAACS,wBAAwB,EAAzB,CAAR;AACD,KARH;AASD,GAXD;AAYD,CAbM","sourcesContent":["import axios from \"axios\";\nimport {\n  SORT_DATA,\n  GET_CLICKED_PRODUCT_REQ,\n  GET_CLICKED_PRODUCT_SUCCESS,\n  GET_PRODUCT_FAILURE,\n  GET_PRODUCT_REQ,\n  GET_PRODUCT_SUCCESS,\n} from \"./actionTypes\";\nimport { useDispatch } from \"react-redux\";\n\n// action for get products request\nexport const getProductsReq = () => ({\n  type: GET_PRODUCT_REQ,\n});\n\n// action for get products success\nexport const getProductsSuccess = (payload) => ({\n  type: GET_PRODUCT_SUCCESS,\n  payload,\n});\n\n// action for get products failure\n\nexport const getProductsFailure = () => ({\n  type: GET_PRODUCT_FAILURE,\n});\n\n// thunk call to fetch products  list\nexport const getproductsData = () => {\n  return (dispatch) => {\n    dispatch(getProductsReq());\n    axios\n      .get(\"https://movie-fake-server.herokuapp.com/products\")\n      .then((res) => {\n        dispatch(getProductsSuccess(res.data));\n      })\n      .catch(() => {\n        dispatch(getProductsFailure());\n      });\n  };\n};\n\n// action object for sort  feature\n\nexport const sortProducts = (payload) => ({\n  type: SORT_DATA,\n  payload,\n});\n\nexport const getClickedProductRequest = () => ({\n  type: GET_CLICKED_PRODUCT_REQ,\n});\nexport const getClickedProductSuccess = (payload) => {\n  // console.log(payload.data);\n  return {\n    type: GET_CLICKED_PRODUCT_SUCCESS,\n    payload,\n  };\n};\nexport const getClickedProductFailure = () => ({\n  type: GET_PRODUCT_FAILURE,\n});\n\nexport const getClickedProductData = (id) => {\n  return (dispatch) => {\n    dispatch(getClickedProductRequest());\n    axios\n      .get(`https://movie-fake-server.herokuapp.com/products/${id}`)\n      .then((res) => {\n        dispatch(getClickedProductSuccess(res.data));\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(getClickedProductFailure());\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}