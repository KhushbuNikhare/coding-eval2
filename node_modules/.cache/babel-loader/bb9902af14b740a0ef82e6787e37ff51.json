{"ast":null,"code":"import { SORT_DATA, GET_CLICKED_PRODUCT_FAILURE, GET_CLICKED_PRODUCT_REQ, GET_CLICKED_PRODUCT_SUCCESS, GET_PRODUCT_FAILURE, GET_PRODUCT_REQ, GET_PRODUCT_SUCCESS } from \"./actionTypes\";\nconst initState = {\n  products: [],\n  sortData: [],\n  isLoading: false,\n  isError: false,\n  selectedData: {}\n};\nexport const Reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  // add the switch statement for different actions\n  switch (type) {\n    case GET_PRODUCT_REQ:\n      return { ...state,\n        isLoading: true\n      };\n\n    case GET_PRODUCT_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        data: [...payload],\n        sortData: [...payload],\n        isError: false\n      };\n\n    case GET_PRODUCT_FAILURE:\n      return { ...state,\n        isLoading: false,\n        data: [],\n        isError: true\n      };\n\n    case SORT_DATA:\n      return { ...state,\n        sortData: state.data.filter(el => {\n          let price = el.price.trim().split(\"|\");\n          return price.indexOf(payload) != -1;\n        })\n      };\n\n    case GET_CLICKED_PRODUCT_REQ:\n      return { ...state,\n        isLoading: true\n      };\n\n    case GET_CLICKED_PRODUCT_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        selectedData: payload,\n        isError: false\n      };\n\n    case GET_CLICKED_PRODUCT_FAILURE:\n      return { ...state,\n        isLoading: false,\n        selectedData: {},\n        isError: true\n      };\n\n    default:\n      return state;\n  }\n};\n_c = Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/Source/src/Redux/reducer.js"],"names":["SORT_DATA","GET_CLICKED_PRODUCT_FAILURE","GET_CLICKED_PRODUCT_REQ","GET_CLICKED_PRODUCT_SUCCESS","GET_PRODUCT_FAILURE","GET_PRODUCT_REQ","GET_PRODUCT_SUCCESS","initState","products","sortData","isLoading","isError","selectedData","Reducer","state","type","payload","data","filter","el","price","trim","split","indexOf"],"mappings":"AAAA,SACEA,SADF,EAEEC,2BAFF,EAGEC,uBAHF,EAIEC,2BAJF,EAKEC,mBALF,EAMEC,eANF,EAOEC,mBAPF,QAQO,eARP;AAUA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,EADM;AAEhBC,EAAAA,QAAQ,EAAE,EAFM;AAGhBC,EAAAA,SAAS,EAAE,KAHK;AAIhBC,EAAAA,OAAO,EAAE,KAJO;AAKhBC,EAAAA,YAAY,EAAE;AALE,CAAlB;AAQA,OAAO,MAAMC,OAAO,GAAG,YAA0C;AAAA,MAAzCC,KAAyC,uEAAjCP,SAAiC;AAAA,MAAtB;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AAC/D;AACA,UAAQD,IAAR;AACE,SAAKV,eAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKJ,mBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,SAAS,EAAE,KAFN;AAGLO,QAAAA,IAAI,EAAE,CAAC,GAAGD,OAAJ,CAHD;AAILP,QAAAA,QAAQ,EAAE,CAAC,GAAGO,OAAJ,CAJL;AAKLL,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKP,mBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,SAAS,EAAE,KAFN;AAGLO,QAAAA,IAAI,EAAE,EAHD;AAILN,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAOF,SAAKX,SAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELL,QAAAA,QAAQ,EAAEK,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAmBC,EAAD,IAAQ;AAClC,cAAIC,KAAK,GAAGD,EAAE,CAACC,KAAH,CAASC,IAAT,GAAgBC,KAAhB,CAAsB,GAAtB,CAAZ;AACA,iBAAOF,KAAK,CAACG,OAAN,CAAcP,OAAd,KAA0B,CAAC,CAAlC;AACD,SAHS;AAFL,OAAP;;AAQF,SAAKd,uBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKP,2BAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,SAAS,EAAE,KAFN;AAGLE,QAAAA,YAAY,EAAEI,OAHT;AAILL,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKV,2BAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELJ,QAAAA,SAAS,EAAE,KAFN;AAGLE,QAAAA,YAAY,EAAE,EAHT;AAILD,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF;AACE,aAAOG,KAAP;AAnDJ;AAqDD,CAvDM;KAAMD,O","sourcesContent":["import {\n  SORT_DATA,\n  GET_CLICKED_PRODUCT_FAILURE,\n  GET_CLICKED_PRODUCT_REQ,\n  GET_CLICKED_PRODUCT_SUCCESS,\n  GET_PRODUCT_FAILURE,\n  GET_PRODUCT_REQ,\n  GET_PRODUCT_SUCCESS,\n} from \"./actionTypes\";\n\nconst initState = {\n  products: [],\n  sortData: [],\n  isLoading: false,\n  isError: false,\n  selectedData: {},\n};\n\nexport const Reducer = (state = initState, { type, payload }) => {\n  // add the switch statement for different actions\n  switch (type) {\n    case GET_PRODUCT_REQ:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case GET_PRODUCT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: [...payload],\n        sortData: [...payload],\n        isError: false,\n      };\n    case GET_PRODUCT_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        data: [],\n        isError: true,\n      };\n\n    case SORT_DATA:\n      return {\n        ...state,\n        sortData: state.data.filter((el) => {\n          let price = el.price.trim().split(\"|\");\n          return price.indexOf(payload) != -1;\n        }),\n      };\n\n    case GET_CLICKED_PRODUCT_REQ:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case GET_CLICKED_PRODUCT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        selectedData: payload,\n        isError: false,\n      };\n    case GET_CLICKED_PRODUCT_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        selectedData: {},\n        isError: true,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}